1. Write a query to display the Version of postgres:
	select version();
2. Write a query to display list of all database:
	 \l
3. Write a query to Create a database:
	create database testdb;
4. Write a query to use a particular database:
	\c testdb;
5. Write a query to Clear screen:
	\! cls
6. Write a query to display all the tables inside the database:
	\d
7. Write a query to Create a table:
	create table emp(id int,ename varchar(20));
8. Write a query to display Table description:
	\d person
9. Write a query to Alter table:
	alter table person add column age int;
10. Write a query to Delete a column:
	alter table person drop column age;
11. Write a query to Change column name:
	alter table person rename column current_name to new_name;
12. Write a query to change table name:
	alter table person rename to emp;
13. Write a query to change database name:
	alter database testdb rename to test; (for that we want to get out from that database.)
14. Write a query to change database:
	\c postgres;
15. Write a query to drop a table:
	drop table table_name;
16. Write a query to Drop a database:
	drop database database_name;

DML :

1. Write a query to Insert values into a table:
	insert into table_name(column1,column2) values(value1,value2);
				(or) 
	insert into table_name values(value1,value2);

2. Write a query to Update values in a table:
	Update emp set sal=999.99;

3. Write a query to Update values in a table with some condition:
	update emp set sal=999.9 where id=7;

4. Write a query to Delete all data in a table:
	detete from idexcel_db;

5. Write a query to Delete values in a table with condition:
	delete from emp where id=8;

DQL:

1. Write a query to Select all data from a table:
	Select * from employee;

2. Write a query to select data from a table Where Condition:
	Select * from emp where id=1;

========Order of execution from-where-select==========




Assignment:

1. Select paricular column --> select name,id from employee;
2. Insert more than one record in single query --> insert into emp values(1,'charlie'),(2,'jomon');
______________________________________________________________________________________________________

1. Write a Query to delete a record where employee id is 103.
	delete from employee where id=103;

2. Write a Query to display designation of all employees.
	select designation from employee;

ALIAS:


2. Write a Query to display designation of all employees with column name as job_title.

	select designation as job_title from employee;
			(OR)
	select designation job_title from employee;

3. Write a Query to add some values and provide some alias name to identify them.

	select (4+5) as Addition;

4. Write a Query to obtain employee name with his current salery and salery with the 25% hike for all employees
	
	select ename,sal,sal+sal*1/4 as hiked_sal from employee;

5. Write a Query to display all the record of the employee with incremented salery of 500 for each employee

	select *,sal+500 as incremented_sal from employee;

6. Write a Query  to display all the record of the employee with decremented salery of 500 for each employee

	select *,sal-500 as decremented_sal from employee;

7. Write a Query to display name, sal and annual sal of all the employee.

	select ename,sal,sal*12 as annual_sal from employee;

8. Write a Query to display per day salery of all the employee.

	select sal/30 as sal_perday from employee;

_____________________________________________________________________________________________________________________

DISTINCT:
	* Used to eliminate duplicate values.

		1. if, we are passing single argument with distinct, it will remove duplicate values.
		2. if, we use two column name with distinct keyword, the it will remove duplicates with combination of columns

1. Write a query to display distinct name from employee table
	
	select distinct ename from employee;

2. Write a query to display multiple column with distinct keyword

	select distinct sal,ename,designation from employee;

____________________________________________________________________________________________________________________________

COMPARISION OPERATORS:

1. Write a query to display sal of emp is equal to 25,000

	select sal from employee where sal=25,000;

2. Write a query to display all records of employee who are getting sal greater than 25000

	select * from employee where sal>25000;

3. Write a query to display all records of employee who are getting sal greater than or equal to 25000

	select * from employee where sal>=25000;	

4. Write a Querty to display all records of employee who are getting sal less than 25000

	select * from employee where sal<25000;

5. Write a Querty to display all records of employee who are getting sal less than or equal to 25000

	select * from employee where sal<=25000;

6. Write a Querty to display all records of employee who are getting sal other than 25000

	select * from employee where sal!=25000;
			(OR)
	select * from employee where sal<>25000;

LOGICAL OPERATOR:

AND:

1. Write a query to display all the record of the employee who is working as hr and having empid as 10.

	select * from employee where designation='hr' and empid=10;

2. Write a query to display all the record of the employee who is working as a salesman and hired after 2016.

	select * from employee where designation='salesman' and hiredate>'2016-12-31';

3. Write a query to display who is working as a hr in deptno 20 only if salery is greater than 25000.
	
	select * from employee where designation='hr' and deptno=20 and sal>24999;

OR:

1. Write a Query to display employee working in deptno 10,20.

	select * from employee where deptno=10 or deptno=20; 

2. Write a Query to display name, sal ,deptno who is working as tester or whose sal is equal to 20000.

	select ename,sal,deptno from employee where designation='tester' or sal=25000;

3. write a query to display name of all employees working as tester and in deptno 30 or clerk or sal greater than equal to 15000.

	select ename from employee where (designation='tester' and deptno=30) or (designation='clerk' and sal>=15000);

NOT:

1. Write a Query to display all employees except those who are working in deptno 30.

	select * from employee where not deptno=30;

_______________________________________________________________________________________________________________________________________________

2. write a query to display all record of emp excluding hr who is working in deptno 30

	select * from employee where not (designation='hr' and deptno=30);

3. Write a query to display all employee who has hired after jan 2015 working as tester in dept 20 or display all emp who hired before 2015.

	select * from employee where (hiredate>'2015-01-31' and designation='tester' and deptno=20) or hiredate<'2015-01-01';

4. write a query to display all the record of the employee who is working in deptno 10,30,40,60

	select * from employee where deptno=10 or deptno=30 or deptno=40 or deptno=50;
	
SPECIAL OPERATORS:

IN:

1. write a query to display all the record of the employee who is working in deptno 10,30,40,60.

	select * from employee where deptno in(10,30,40,50);

2. write a query to display all record of the employee who is working as salesman, manager, or admin.

	select * from employee where designation in('salesman','manager','admin');

NOT IN:

1. Write a query to display all employees who are working in deptno 50,30,40 excluding salesman and hr

	select * from employee where deptno in(50,30,40) and designation not in('salesman',hr');

BETWEEN:

1. write a query to display all the record of the employee whose salery range within 20000 to 40000

	select * from employee where sal>=20000 and sal<=40000;
			( OR )
	select * from employee where sal between 20000 and 40000;

2. Write a query to display all employee who are hired during 2014

	select * from employee where hiredate between '2014-01-01' and '2014-12-31';

3. Write a query to display ename, sal of all emp who are working deptno 10,20 and sal between 40000 to 50000;

	select *,sal*12 as annual_sal from employee where deptno in (10,20) and sal*12 between 40000 and 50000;

NOT BETWEEN:

1. Write a query to display all record of employee excluding those who are hired in 2017.

	select * from employee where hiredate not between '2017-01-01' and '2017-12-31';

IS:

1. Write a query to display all record of employee whose deptno is null.

	select * from employee where deptno is null;

IS NOT:

1. Write a query to display all record of employee whose deptno is not null;

	select * from employee where deptno is not null;

LIKE:

1. Write a Query to find all record of employee whose name starts with 'R'.

	select * from employee where ename like 'r%';

2. Write a Query to find all record of employee whose name starts with 'R' and having only three character.

	select * from employee where ename like 'r__';

3. Write a Query to display all the record of the employee who has atleast two 'l' in  their names;

	select * from employee where ename like '%l%l%';

4. Write a query to display all record of employee and whose name starts with 's' and ends with 'p'.
	
	select * from employee where ename like 's%p';

5. Write a query to display all the record of the employee whose name length in 5 and starts with 's' and 'l' should be second last character.

	select * from employee where ename like 's__l_';

6. Write a query to display all records of employee, if employee name begins with 's' or 'a'.

	select * from employee where ename like 's%' or ename like 'a%';

NOT LIKE:


1. Write a query to display all records of employee excluding employee name begins with 'z' and 'p'.
	
	select * from employee where ename not like 'z%' or ename not like 'p%';

AGGREGATE FUNCTIONS:

AVG():

1. write a query to display avg sal of all the employee.

	select avg(sal) from employee;

COUNT():

2. write a query to count number of records

	select count(*) from employee;

MAX():

3. Write a Query to get maximum sal from employee table.

	select max(sal) from employee;

MIN():

4. Write a Query to get minimum sal from employee table.

	select min(sal) from employee;

SUM():

5. Write a Query to get sum of all sal from employee table.

	select sum(sal) from employee;

6. Write a Query to get sum,avg,count,min and max salery from the employee table.

	select sum(sal) salsum,max(sal) maxSal,min(sal) minSal,avg(sal) avgSal,count(sal) salCount from employee;

_______________________________________________________________________________________________________________________________________________________________________

ORDERBY:

1. Write a Query to Display all record of employee according to sal should be desending order

	select * from employee order by sal DESC;

2. Write a query to display all the detail of employee and sort the record in descending order of hiredate, if there are more than one employee hired on the same date then the highest sal should be showed first.

	select * from employee order by hiredate desc,sal desc;

3. Write a query to display the name , sal and annual sal and sord record in ascending order of annual sal.

	select ename, sal, sal*12 annual_sal from employee order by annual_sal asc;

4. Write a query to display name, designation for all the employee who are working in either of dept 10,20,40 and sort the record in ascending order by their salery.

	select ename, designation from employee where deptno in (10,20,40) order by sal;

GROUPBY:

1. Write a query to display number of count of the employee working in each dept

	select count(deptno) from employee group by deptno;

2. Write a Query to display the highest sal of employee in each department.
	
	select max(sal) from employee group by deptno;

3. Write a Query to display number of tester working in each department.

	select count(designation),deptno from employee where designation='tester' group by deptno;

HAVING:

1. Write a Query to display the deptno which has atleast 2 clerk working.

	select deptno from employee where designation='clerk' group by deptno having count(*)>=2;

2. Write a Query to display dept no which has total sal greater than 10000 in each dept.

	select deptno from employee group by deptno having sum(sal)>10000;

3. Write a Query to display deptno which has atleast 2 employee hired into it on the same date.

	select deptno from employee group by deptno,hiredate having count(*)>1

4. write a Query to display deptno and avg sal of all the departments whose avg sal is greater than 15000 by excluding the employee whose names begins with 'r';

	select deptno,avg(sal) from employee where ename not like 'r%' group by deptno having avg(sal)>15000;

